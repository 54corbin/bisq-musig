syntax = "proto3";
package walletrpc;

service Wallet {
  rpc WalletBalance (WalletBalanceRequest) returns (WalletBalanceResponse);

  rpc NewAddress (NewAddressRequest) returns (NewAddressResponse);

  rpc ListUnspent (ListUnspentRequest) returns (ListUnspentResponse);

  rpc RegisterConfidenceNtfn (ConfRequest) returns (stream ConfEvent);
}

message WalletBalanceRequest {
}

message WalletBalanceResponse {
  uint64 immature = 1;
  uint64 trustedPending = 2;
  uint64 untrustedPending = 3;
  uint64 confirmed = 4;
}

message NewAddressRequest {
}

message NewAddressResponse {
  string address = 1;
  string derivationPath = 2;
}

message ListUnspentRequest {
}

message ListUnspentResponse {
  repeated TransactionOutput utxos = 1;
}

message TransactionOutput {
  bytes txId = 1;
  uint32 vout = 2;
  bytes scriptPubKey = 3;
  uint64 value = 4;
}

message ConfRequest {
  bytes txId = 1;
}

message ConfEvent {
  bytes rawTx = 1;
  ConfidenceType confidenceType = 2;
  uint32 numConfirmations = 3;
  optional ConfirmationBlockTime confirmationBlockTime = 4;
}

enum ConfidenceType {
  CONFIRMED = 0;
  UNCONFIRMED = 1;
}

message ConfirmationBlockTime {
  bytes blockHash = 1;
  uint32 blockHeight = 2;
  uint64 confirmationTime = 3;
}
